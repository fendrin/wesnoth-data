export ^
--textdomain wesnoth
-- Utility macros for images, overlays, and display effects.

-- These don't depend on any other macros.  Please don't change this.

COLOR_HEAL = () -> {
    color: "0,255,0"
}

COLOR_HARM = () -> {
    color: "255,0,0"
}

COLOR_WHITE = () -> {
    color: "255,255,255"
}

IS_HERO = () -> {
-- Embed this into a unit declaration to add a hero icon to the unit.
    overlays: "misc/hero-icon.png"
    ellipse: "misc/ellipse-hero"
}

IS_LOYAL = () -> {
-- Embed this into a unit declaration to add a loyalty icon to the unit.
    overlays: "misc/loyal-icon.png"
}

IS_EXPENDABLE_LEADER = () -> {
-- Embed this into a unit declaration to add an expendable leader icon to the unit.
    overlays: "misc/leader-expendable.png"
}

NEW_JOURNEY = (X, Y) -> {
-- Make a new journey mark on a tracking map
    image: {
        x: X, y: Y
        file: "misc/new-journey.png"
        delay: 500
        centered: true
    }
}

OLD_JOURNEY = (X, Y) -> {
-- Make an old journey mark on a tracking map
    image: {
        x: X, y: Y
        file: "misc/dot-white.png"
        centered: true
    }
}

NEW_BATTLE = (X, Y) -> {
-- Make a new battle mark on a tracking map, with a blinking animation.
-- Because of the animation, generally you should only use this as the final
-- journey marker in any given story screen.
    image: {
        x: X, y: Y
        file: "misc/new-battle2.png"
        delay: 500
        centered: true
    }
    image: {
        x: X, y: Y
        file: "misc/new-battle.png"
        delay: 500
        centered: true
    }
    image: {
        x: X, y: Y
        file: "misc/new-battle2.png"
        delay: 500
        centered: true
    }
    image: {
        x: X, y: Y
        file: "misc/new-battle.png"
        delay: 500
        centered: true
    }
    image: {
        x: X, y: Y
        file: "misc/new-battle2.png"
        delay: 500
        centered: true
    }
}

OLD_BATTLE = (X, Y) -> {
-- Make an old battle mark on a tracking map
    image: {
        x: X, y: Y
        file: "misc/cross-white.png"
        centered: true
    }
}

NEW_REST = (X, Y) -> {
-- Make a new rest mark on a tracking map, with a blinking animation.
-- Because of the animation, generally you should only use this as the final
-- journey marker in any given story screen.
    image: {
        x: X, y: Y
        file: "misc/flag-red.png"
        delay: 500
        centered: true
    }
    image: {
        x: X, y: Y
        file: "misc/flag-red2.png"
        delay: 500
        centered: true
    }
    image: {
        x: X, y: Y
        file: "misc/flag-red.png"
        delay: 500
        centered: true
    }
    image: {
        x: X, y: Y
        file: "misc/flag-red2.png"
        delay: 500
        centered: true
    }
    image: {
        x: X, y: Y
        file: "misc/flag-red.png"
        delay: 500
        centered: true
    }
}

OLD_REST = (X, Y) -> {
-- Make an old rest mark on a tracking map
    image: {
        x: X, y: Y
        file: "misc/flag-white.png"
        centered: true
    }
}

PLACE_IMAGE = (IMAGE, X, Y) -> {
-- Place an image at a specified location on the map.
    item: {
        x: X
        y: Y
        image: IMAGE
    }
}

REMOVE_IMAGE = (X, Y) -> {
-- Removes a previously set image from a tile.
--
-- Example:
--! {REMOVE_IMAGE 14 5}
    remove_item: {
        x: X, y: Y
    }
}

TEAM_COLOR_OVERRIDE = (FILTER, TEAMCOLOR_ID) -> {
-- Override the team color of filtered units.
    object: {
        silent: true
        filter: {
            <FILTER
        }
        effect: {
            apply_to: "image_mod"
-- Couldn't parse line
        }
    }
}

MAKE_HERO = (ID_STRING) -> {
-- Give an existing unit a hero overlay
    unit_overlay: {
        id: ID_STRING
        image: "misc/hero-icon.png"
    }
    object: {
        silent: true
        duration: "forever"

        filter: {
            id: ID_STRING
        }

        effect: {
            apply_to: "ellipse"
            ellipse: "misc/ellipse-hero"
        }
    }
}

UNMAKE_HERO = (ID_STRING) -> {
-- Remove the hero overlay from a unit
    remove_unit_overlay: {
        id: ID_STRING
        image: "misc/hero-icon.png"
    }
    object: {
        silent: true
        duration: "forever"

        filter: {
            id: ID_STRING
        }

        effect: {
            apply_to: "ellipse"
            ellipse: "misc/ellipse"
        }
    }
}

FLAG_VARIANT = (NAME) -> {
-- Enable the specified flag variant: knalgan, loyalist, ragged,
-- long, undead, or wood-elvish. Use within a [side] block; only
-- affects that side.
-- Since the ragged variant has six frames instead of the usual four,
-- for that flag it's better to use FLAG_VARIANT6 below instead.
-- wmlscope: start ignoring
    flag: "flags/#{NAME}-flag-[1~4].png:150"
    flag_icon: "flags/#{NAME}-flag-icon.png"
-- wmlscope: stop ignoring
}

FLAG_VARIANT6 = (NAME) -> {
-- Like FLAG_VARIANT, but this supports flags with six frames.
-- Currently only the ragged flag has six frames.
-- wmlscope: start ignoring
    flag: "flags/#{NAME}-flag-[1~6].png:150"
    flag_icon: "flags/#{NAME}-flag-icon.png"
-- wmlscope: stop ignoring
}

ANIMATED_MAUSOLEUM = (X, Y) -> {
-- Embed this at scenario toplevel, not within an event.
-- Note that it will freeze while dialogue popups are onscreen.
    terrain_graphics: {
        x: X
        y: Y
        tile: {
            x: 0
            y: 0
            set_flag: "mausoleum"
        }
    }
    terrain_graphics: {
        map: "
, *
* , *
, 1
* , *
, *"
        tile: {
            pos: 1
            has_flag: "mausoleum"
        }
        image: {
            layer: 0
            center: {92, 138}
-- wmlscope: start ignoring
-- FIXME: More implicit-path breakage
            name: "../scenery/mausoleum[01~18].png:140"
-- wmlscope: stop ignoring
        }
    }
}
